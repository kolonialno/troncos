[tool.poetry]
name = "troncos"
version = "5.2.0"
description = "Collection of Python logging, tracing and profiling tools"
authors = [
  "Guðmundur Björn Birkisson <gudmundur.birkisson@oda.com>",
  "Karl Fredrik Haugland <karlfredrik.haugland@oda.com>",
  "Eirik Martiniussen Sylliaas <eirik.sylliaas@oda.com>",
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/kolonialno/troncos"
repository = "https://github.com/kolonialno/troncos"
documentation = "https://github.com/kolonialno/troncos"
keywords = ["logs", "traces", "opentelemetry"]

[tool.poetry.dependencies]
ddtrace = ">=2,<4"
opentelemetry-exporter-otlp-proto-grpc = { version = ">=1.19,<2", optional = true }
opentelemetry-exporter-otlp-proto-http = ">=1.19,<2"
opentelemetry-sdk = ">=1.19,<2"
pyroscope-io = ">=0.8.0,<1"
python = ">=3.10,<4.0"
python-ipware = ">=2,<4"
structlog-sentry = { version = ">=2.0.0,<3", optional = true }

[tool.poetry.extras]
grpc = ["opentelemetry-exporter-otlp-proto-grpc"]
sentry = ["structlog-sentry"]

[tool.poetry.group.dev.dependencies]
celery = "^5.3.4"
django = "^5.0.0"
django-environ = "^0.11.0"
fastapi = ">=0.111,<0.112"
ipython = "^8.14.0"
mkdocs-techdocs-core = "^1.2.3"
mypy = "^1.15.0"
pytest = "^8.0.0"
pytest_codeblocks = "^0.17.0"
pytest-asyncio = ">=0.23.1,<0.24.0"
pytest-benchmark = "^4.0.0"
pytest-cov = "^4.1.0"
pytest-httpserver = "^1.0.8"
requests = "^2.31.0"
snakeviz = "^2.2.0"
structlog = "^24.0.0"
types-requests = "^2.28.11.14"
ruff = "^0.9.8"
pytest-env = "^1.1.5"


[tool.mypy]
python_version = "3.11"
files = ["./troncos", "./tests"]
namespace_packages = true
show_error_codes = true
ignore_missing_imports = true
follow_imports = "normal"
strict = true

[[tool.mypy.overrides]]
module = ["opentelemetry.sdk.*", "opentelemetry.context.*"]
implicit_reexport = true

[tool.pytest.ini_options]
minversion = 6.0
python_files = "test_*.py"
python_functions = "test_*"
cache_dir = ".pytest_cache"
# Silence warning by opting in to use pytest 6's new default value
junit_family = "xunit2"
# Include captured log messages in system-out in Jenkins report file
junit_logging = "system-out"
console_output_style = "classic"
empty_parameter_set_mark = "xfail"
log_cli_level = "INFO"
log_level = "INFO"
ddtrace = 0
filterwarnings = [
  "error",
  "ignore:Type google._upb._message.MessageMapContainer:DeprecationWarning:",
  "ignore:Type google._upb._message.ScalarMapContainer:DeprecationWarning:",
  "ignore:datetime.datetime.utcfromtimestamp:DeprecationWarning:",
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning:",
  "ignore:Deprecated call to `pkg_resources:DeprecationWarning:",
]
addopts = [
  "--ignore=perf"
]

[tool.pytest_env]
DD_TRACE_ENABLED = "True"

[tool.ruff]
line-length = 88
exclude = [
    ".git",
    ".github",
    ".venv",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    # Regular flake8 rules
    "C", "E", "F", "W",
    # flake8-bugbear rules
    "B",
    # Import sorting rules
    # "I",
    # flake8-comprehensions
    "C4",
    # flake8 django
    "DJ",
    # Pylint rules
    "PLC", "PLE", "PLR", "PLW",
    # Ruff
    "RUF",
]
ignore = [
   # C901 is too complex
   "C901",

   # PLR2004 Magic value used in comparison
   "PLR2004",
   # PLR0913 Too many arguments in function definition
   "PLR0913",
]

[build-system]
requires = ["poetry-core>=1.1.0a6"]
build-backend = "poetry.core.masonry.api"
